{"instruction": "Create an array of length 5 which contains all even numbers between 1 and 10.", "input": "", "output": "arr = [2, 4, 6, 8, 10]"}
{"instruction": "Formulate an equation to calculate the height of a triangle given the angle, side lengths and opposite side length.", "input": "", "output": "Height of triangle = opposite side length * sin (angle) / side length"}
{"instruction": "Write a replace method for a string class which replaces the given string with a given set of characters.", "input": "string = \"Hello World!\"\nreplace_with = \"Greetings!\"", "output": "def replace(self, replace_with):\n    new_string = \"\"\n    for char in self:\n        if char == \" \":\n            new_string += replace_with\n        else:\n            new_string += char\n    return new_string"}
{"instruction": "Create an array of length 15 containing numbers divisible by 3 up to 45.", "input": "", "output": "arr = [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45]"}
{"instruction": "Write a function to find the number of distinct states in a given matrix.", "input": "matrix = [[1, 0, 0],\n          [1, 0, 1],\n          [1, 1, 1]]", "output": "def find_num_distinct_states(matrix):\n    states = set()\n    for row in matrix:\n        state = \"\".join([str(x) for x in row])\n        states.add(state)\n    return len(states)"}
{"instruction": "Create a nested loop to print every combination of numbers between 0-9", "input": "", "output": "for i in range(10):\n    for j in range(10):\n        print(i, j)"}
{"instruction": "Write a function to find the maximum difference between two numbers in a given array.", "input": "arr = [5, 3, 17, 11, 9]", "output": "def max_difference(arr):\n    max_diff = 0\n    for i in range(len(arr)-1):\n        diff = arr[i+1] - arr[i]\n        if diff > max_diff:\n            max_diff = diff\n    return max_diff"}
{"instruction": "Write a function to generate the nth Fibonacci number.", "input": "< noinput >", "output": "def fib(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-2) + fib(n-1)"}
{"instruction": "Write a class to represent a 2D point with x and y coordinates.", "input": "", "output": "class Point:\n    def __init__(self, x, y):\n        self.x = x \n        self.y = y \n   \n    def __str__(self): \n        return \"({0},{1})\".format(self.x, self.y)"}
{"instruction": "Write code that removes spaces from a given string.", "input": "string = \" A B C D \"", "output": "def remove_spaces(string): \n    return \"\".join(string.split())"}
{"instruction": "Write a function that checks if a give number is even or odd.", "input": "", "output": "def is_even(n):\n    if n%2 == 0:\n        return True  \n    else:\n        return False"}
{"instruction": "Write code to create a list of all prime numbers between 2 and 100.", "input": "", "output": "def find_primes(n): \n    prime_list = [2] \n    for number in range(2, n + 1): \n        is_prime = True\n        for k in range(2, number): \n            if number % k == 0: \n                is_prime = False \n        if is_prime: \n            prime_list.append(number) \n    return prime_list"}
{"instruction": "Edit the following code to print out all even numbers from 1 to 10.", "input": "for i in range(1,11):\n    print(i)", "output": "for i in range(1,11):\n    if i % 2 == 0:\n        print(i)"}
{"instruction": "Write code to find the sum of all numbers between 1 and 10.", "input": "", "output": "sum = 0\nfor i in range(1,11):\n    sum += i\nprint(sum)"}
{"instruction": "Create a function to calculate the area of a given circle.", "input": "", "output": "def area_circle(radius):\n    return 3.14 * (radius**2)"}
{"instruction": "Follow the comments in the code to complete the program which prints a conversion table from Fahrenheit to Celsius.", "input": "# This program prints a conversion table from Fahrenheit to Celsius\n\n# Print a heading for the table\n# TODO\n\n# Print the column headings\n# TODO\n\n# Calculate and print the table body\n# TODO", "output": "# This program prints a conversion table from Fahrenheit to Celsius\n\n# Print a heading for the table\nprint(\"Fahrenheit to Celsius Conversion Table\")\n\n# Print the column headings\nprint(\"Fahrenheit \\t Celsius\")\n\n# Calculate and print the table body\nfor fahr in range(-50 , 121):\n  celsius = (fahr - 32) * 5 / 9\n  print(\"%3d \\t\\t %.2f\" % (fahr, celsius))"}
{"instruction": "Develop a classification algorithm in Python to predict whether a bird is a hawk or a falcon.", "input": "", "output": "import pandas as pd\nimport numpy as np\n\n# Define features\nfeatures = [\"wing_shape\", \"size\", \"tails_length\", \"color_pattern\"] \n\n# Load the data\ndata = pd.read_csv(\"birds.csv\")\n\n# Preprocess the data to generate feature vectors\nX = np.array(data[features]) \n\n# Make a target vector \ny = np.array(data[\"species\"]) \n\n# Divide the data into training and test sets\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Train a classification model\nfrom sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier()\nmodel.fit(X_train, y_train)\n\n# Make predictions\ny_pred = model.predict(X_test)\n\n# Generate evaluation metrics\nfrom sklearn.metrics import accuracy_score\naccuracy = accuracy_score(y_test, y_pred)\n\nprint(\"Model accuracy: %.2f\" % accuracy)"}
{"instruction": "Create a function in Java for computing the factorial of a positive integer number.", "input": "", "output": "public static long factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    long result = 1;\n    for (int i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;\n}"}
{"instruction": "Create a C++ program for randomly shuffling an array of integers.", "input": "", "output": "#include <iostream>\n#include <algorithm>\n#include <random>\n\nvoid shuffleArray(int array[], int size) {\n\tstd::random_device rd;\n\tstd::mt19937 g(rd()); \n\tstd::shuffle(array, array+size, g); \n}\n\nint main() \n{ \n\tint array[] = {1, 2, 3, 4, 5, 6, 7, 8}; \n\tint size = sizeof(array) / sizeof(array[0]); \n\n    // Print original array\n    std::cout << \"Original array: \";\n    for (int i : array)\n        std::cout << i << \" \";\n    std::cout << \"\\n\";\n\n    // Shuffle array\n\tshuffleArray(array, size); \n\n    // Print shuffled array\n    std::cout << \"Shuffled array: \";\n    for (int i : array)\n        std::cout << i << \" \";\n    std::cout << \"\\n\";\n\n\treturn 0; \n}"}
{"instruction": "Use the function to debug the given program and prevent the segmentation fault.", "input": "#include <stdio.h>\n\nint main() {\n    int array[] = {1, 2, 3, 4, 5};\n    int n = 5;\n    int i;\n    // TODO\n    for (i = 0; i <= n; i++) {\n        printf(\"%d\\n\", array[i]);\n    }\n    return 0;\n}", "output": "#include <stdio.h>\n\nint main() {\n    int array[] = {1, 2, 3, 4, 5};\n    int n = 5;\n    int i;\n    // Limit loop size to the length of the array\n    for (i = 0; i < n; i++) {\n        printf(\"%d\\n\", array[i]);\n    }\n    return 0;\n}"}
{"instruction": "Replace the placeholder with a for loop for iterating over the numbers from 1 to n and printing them.", "input": "for i in range(n):\n    # TODO", "output": "for i in range(1, n+1):\n    print(i)"}
{"instruction": "Use try-except statements to detect and handle exceptions in the code.", "input": "for i in range(n):\n    x = 1/i", "output": "try:\n    for i in range(n):\n        x = 1/i\nexcept ZeroDivisionError:\n    print(\"Zero division error encountered!\")"}
{"instruction": "Re-write the code segment as a list comprehension.", "input": "numbers = []\nfor i in range(10):\n    if i % 2 == 0:\n        numbers.append(i)", "output": "numbers = [i for i in range(10) if i % 2 == 0]"}
{"instruction": "Remove the boilerplate code from the program for printing 10 random numbers.", "input": "import random\n\n# Generate 10 random numbers\nfor i in range(10):\n    # TODO", "output": "import random\n\n# Generate 10 random numbers\nfor i in range(10):\n    print(random.randrange(1, 101))"}
{"instruction": "Modify the code to perform the mathematical expression “x to the power of y”.", "input": "# Calculate x to the power of y\n# TODO", "output": "# Calculate x to the power of y\nx_pow_y = x**y"}
{"instruction": "Create a dictionary for counting the occurrence of each letter in the given string.", "input": "string = \"hello world\"\n#TODO", "output": "string = \"hello world\"\nletter_counts = {}\n\nfor letter in string:\n    if letter in letter_counts:\n       letter_counts[letter] += 1\n    else:\n        letter_counts[letter] = 1\n\nprint(letter_counts)"}
{"instruction": "Follow the comments to complete the code that finds the maximum value in an array.", "input": "# Find the maximum value in an array\narr = [4, 5, 2, 8, 7]\n# TODO", "output": "# Find the maximum value in an array\narr = [4, 5, 2, 8, 7]\n\nmax_value = arr[0]\nfor i in range(1, len(arr)):\n    if arr[i] > max_value:\n        max_value = arr[i]\n\nprint(max_value)"}
{"instruction": "Write a function in HTML for creating a table of n rows and m columns.", "input": "", "output": "<table>\n  <tbody>\n    <% for (let i = 0; i < n; i++) { %>\n      <tr>\n        <% for (let j = 0; j < m; j++) { %>\n          <td>Cell Content</td>\n        <% } %>\n      </tr>\n    <% } %>\n  </tbody>\n</table>"}
{"instruction": "Create a CSS script that centers the login form on the webpage.", "input": "", "output": ".login-form {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"}
{"instruction": "Create a Java program that prints out the sum of the numbers in the array.", "input": "int[] numbers = {1, 2, 3 , 4, 5};", "output": "public class SumOfArray {\n    public static void main(String[] args) {\n        int[] numbers = {1, 2, 3 , 4, 5};\n        int sum = 0;\n        for(int i=0; i < numbers.length;i++) {\n            sum = sum + numbers[i];\n        }\n        System.out.println(\"The sum of numbers in the given array is: \" + sum);\n    }\n}"}
{"instruction": "Write a SQL query to calculate the total number of orders in the \"orders\" table.", "input": "", "output": "SELECT COUNT(*) AS \"Total Number of Orders\" \nFROM orders;"}
{"instruction": "Write a Python function to convert a given string to lowercase.", "input": "string = \"FOO\"", "output": "def to_lowercase(string):\n    return string.lower()\n\nstring = \"FOO\"\nprint(to_lowercase(string))"}
{"instruction": "Create a C program that prints out the Fibonacci sequence.", "input": "", "output": "#include <stdio.h>\n\nint main()\n{\n    int i, num, first=0, second=1, next;\n    printf(\"Enter the number of elements: \");\n    scanf(\"%d\", &num);\n    printf(\"Fibonacci Series: \");\n    for (i = 0; i < num; i++)\n    {\n        if (i <= 1)\n            next = i;\n        else\n        {\n            next = first + second;\n            first = second;\n            second = next;\n        }\n        printf(\"%d \", next);\n    }\n    return 0;\n}"}
{"instruction": "Write a function in JavaScript to count the number of vowels in a given string.", "input": "const string = \"abcdefg\"", "output": "function countVowels(string) {\n    let vowelCount = 0;\n    const vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"];\n  \n    for (let i = 0; i < string.length; i++) {\n      if (vowels.includes(string[i])) {\n        vowelCount++;\n      }\n    }\n  \n    return vowelCount;\n}\n\nconst string = \"abcdefg\";\nconsole.log(countVowels(string));"}
{"instruction": "Create a JSX code that renders a \"Hello, World!\" message in the browser.", "input": "", "output": "import React from \"react\";\n\nfunction App() {\n  return (\n    <div>\n      <h1>Hello, World!</h1>\n    </div>\n  );\n}\n\nexport default App;"}
{"instruction": "Write an SQL query to calculate the average order price for each product category in the \"orders\" table.", "input": "", "output": "SELECT category, AVG(price) as \"Average Order Price\"\nFROM orders\nGROUP BY category;"}
{"instruction": "Create a Java program that prints out the contents of a given two-dimensional array.", "input": "int[][] arr = {{1,2},{3,4},{5,6}}", "output": "public class TwoDArray {\n\n    public static void main(String[] args) {\n        int[][] arr = {{1,2},{3,4},{5,6}};\n\n        for(int i=0;i<arr.length;i++){\n            for(int j=0;j<arr[i].length;j++){\n                System.out.print(arr[i][j]+\" \");\n            }\n            System.out.println();\n        }\n    }\n}"}
{"instruction": "Create a C++ program that sorts a given array in descending order.", "input": "int array[] = {6, 3, 8, 12, 9, 4};", "output": "#include<iostream>\nusing namespace std;\n \nint main()\n{\n    int array[] = {6, 3, 8, 12, 9, 4};\n    int arraySize = sizeof(array)/sizeof(array[0]);\n \n    //ascending order sorting\n    for(int i = 0; i < arraySize; i++)\n    {\n        // find the position of smallest element\n        int small = i;\n        for(int j = i+1; j < arraySize; j++)\n        {\n            if(array[j] > array[small])\n                small = j;\n        }\n \n        // swap the position of smallest element\n        int temp = array[i];\n        array[i] = array[small];\n        array[small] = temp;\n    }\n \n    // print the sorted array\n    cout << \"Sorted array : \";\n    for(int i = 0; i < arraySize; i++)\n        cout << array[i] << \" \";\n \n    return 0;\n}"}
{"instruction": "Edit the Python code so that it prints out the total number of elements in the list.", "input": "list = [1, 2, 3, 4, 5]", "output": "list = [1, 2, 3, 4, 5]\nprint(\"Total number of elements in the list: \", len(list))"}
{"instruction": "Create a Swift code that show the number of days in the given month.", "input": "int month = 5", "output": "let month = 5\nlet daysEndingInth = [3, 0, 3, 2, 3, 2, 3, 3, 2, 3, 2, 3]\nlet daysInMonth = daysEndingInth[month - 1] \nprint(\"The number of days in the month of \\(month) is \\(daysInMonth).\")"}
{"instruction": "Write a HTML code that create a form for user to fill out their current address.", "input": "", "output": "<form action=\"\">\n    <label for=\"street\">Street</label>\n    <input type=\"text\" name=\"street\" id=\"street\">\n    <label for=\"city\">City</label>\n    <input type=\"text\" name=\"city\" id=\"city\">\n    <label for=\"state\">State</label>\n    <input type=\"text\" name=\"state\" id=\"state\">\n    <label for=\"zip\">Zip Code</label>\n    <input type=\"text\" name=\"zip\" id=\"zip\"> \n    <input type=\"submit\" value=\"Submit\">\n</form>"}
{"instruction": "Write a SQL query to find the total number of orders placed between two given dates.", "input": "start_date = '2020-01-01'\nend_date = '2020-02-01'", "output": "SELECT COUNT(*)\nFROM orders\nWHERE order_date BETWEEN '2020-01-01' AND '2020-02-01';"}
{"instruction": "Create a Ruby code that prints out the median of a given array of numbers.", "input": "nums = [1, 7, 3, 6]", "output": "nums = [1, 7, 3, 6]\nsorted_nums = nums.sort\n\n# Calculation of median \nif sorted_nums.length % 2 == 0\n  mid_index = sorted_nums.length/2\n  median = (sorted_nums[mid_index] + sorted_nums[mid_index - 1])/2.to_f\nelse\n  mid_index = sorted_nums.length/2\n  median = sorted_nums[mid_index]\nend\n\nputs median"}
{"instruction": "Create a PHP code to check if an array contains a given item.", "input": "$input_array = array(1,2,3,4,5);\n$item_to_check = 3;", "output": "<?php\n$input_array = array(1,2,3,4,5);\n$item_to_check = 3;\n\nif(in_array($item_to_check, $input_array)) {\n  echo \"Array contains the given item.\";\n} else {\n  echo \"Array doesn't contain the given item.\";\n}\n?>"}
{"instruction": "Edit the code to create a try-except block to handle the exception.", "input": "a = 5\nb = 0\n\nans = a/b", "output": "try:\n    a = 5\n    b = 0\n\n    ans = a/b\nexcept ZeroDivisionError:\n    print(\"Cannot divide by zero.\")"}
{"instruction": "Write a script using Bash that replaces all vowels with a number.", "input": "", "output": "#!/bin/bash\n\nstring=\"Hello World!\"\nvowels=(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\")\n\nfor i in \"${vowels[@]}\"\ndo\n    string=\"${string//$i/0}\"\ndone\n\necho $string #H0ll0 W0rld!"}
{"instruction": "Change the variable `x` to the data type desired.", "input": "x = 'Hello World!'", "output": "x = \"Hello World!\""}
{"instruction": "Create a function that takes an array as an argument and returns the sum of all the elements in the array.", "input": "arr = [1, 2, 3, 4, 5]", "output": "def arraySum(arr):\n    total = 0\n    for num in arr:\n        total += num\n    return total"}
{"instruction": "Sort the array in ascending order.", "input": "arr = [3, 2, 1, 5, 4]", "output": "arr.sort() # [1, 2, 3, 4, 5]"}
{"instruction": "Generate a random integer between 4 and 8 (inclusively).", "input": "", "output": "import random\nx = random.randint(4, 8)"}
